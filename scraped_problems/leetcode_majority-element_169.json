{
  "title": "Majority Element",
  "slug": "majority-element",
  "difficulty": "Easy",
  "description": "Given an array nums of size n, return the majority element. The majority element is the element that appears more than &lfloor;n / 2&rfloor; times. You may assume that the majority element always exists in the array. &nbsp; Example 1: Input: nums = [3,2,3] Output: 3 Example 2: Input: nums = [2,2,1,1,1,2,2] Output: 2 &nbsp; Constraints: n == nums.length 1 <= n <= 5 * 104 -109 <= nums[i] <= 109 &nbsp; Follow-up: Could you solve the problem in linear time and in O(1) space?",
  "examples": [
    "Input: nums = [3,2,3] Output: 3",
    "Input: nums = [2,2,1,1,1,2,2] Output: 2 &nbsp;"
  ],
  "constraints": [
    "n == nums.length",
    "1 <= n <= 5 * 104",
    "-109 <= nums[i] <= 109",
    "&nbsp;"
  ],
  "problem_id": 169,
  "url": "https://leetcode.com/problems/majority-element/",
  "scraped_at": "2025-06-17T17:06:29.361246"
}