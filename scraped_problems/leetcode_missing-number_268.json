{
  "title": "Missing Number",
  "slug": "missing-number",
  "difficulty": "Easy",
  "description": "Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array. &nbsp; Example 1: Input: nums = [3,0,1] Output: 2 Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums. Example 2: Input: nums = [0,1] Output: 2 Explanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums. Example 3: Input: nums = [9,6,4,2,3,5,7,0,1] Output: 8 Explanation: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Constraints: n == nums.length 1 <= n <= 104 0 <= nums[i] <= n All the numbers of nums are unique. &nbsp; Follow up: Could you implement a solution using only O(1) extra space complexity and O(n) runtime complexity?",
  "examples": [
    "Input: nums = [3,0,1] Output: 2 Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.",
    "Input: nums = [0,1] Output: 2 Explanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.",
    "Input: nums = [9,6,4,2,3,5,7,0,1] Output: 8 Explanation: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"
  ],
  "constraints": [
    "n == nums.length",
    "1 <= n <= 104",
    "0 <= nums[i] <= n",
    "All the numbers of nums are"
  ],
  "problem_id": 268,
  "url": "https://leetcode.com/problems/missing-number/",
  "scraped_at": "2025-06-17T17:08:03.159457"
}