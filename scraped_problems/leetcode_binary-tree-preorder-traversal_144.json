{
  "title": "Binary Tree Preorder Traversal",
  "slug": "binary-tree-preorder-traversal",
  "difficulty": "Easy",
  "description": "Given the root of a binary tree, return the preorder traversal of its nodes' values. &nbsp; Example 1: Input: root = [1,null,2,3] Output: [1,2,3] Explanation: Example 2: Input: root = [1,2,3,4,5,null,8,null,null,6,7,9] Output: [1,2,4,5,6,7,3,8,9] Explanation: Example 3: Input: root = [] Output: [] Example 4: Input: root = [1] Output: [1] &nbsp; Constraints: The number of nodes in the tree is in the range [0, 100]. -100 <= Node.val <= 100 &nbsp; Follow up: Recursive solution is trivial, could you do it iteratively?",
  "examples": [
    "Input: root = [1,null,2,3] Output: [1,2,3] Explanation:",
    "Input: root = [1,2,3,4,5,null,8,null,null,6,7,9] Output: [1,2,4,5,6,7,3,8,9] Explanation:",
    "Input: root = [] Output: []",
    "Input: root = [1] Output: [1] &nbsp;"
  ],
  "constraints": [
    "The number of nodes in the tree is in the range [0, 100].",
    "-100 <= Node.val <= 100",
    "&nbsp;"
  ],
  "problem_id": 144,
  "url": "https://leetcode.com/problems/binary-tree-preorder-traversal/",
  "scraped_at": "2025-06-17T17:06:17.072735"
}